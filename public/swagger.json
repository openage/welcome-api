{
    "swagger": "2.0",
    "info": {
        "title": "Visitor API",
        "description": "Move your app forward with the Visitor API",
        "version": "1.0.0"
    },
    "host": "localhost:3060",
    "schemes": ["http", "https"],
    "basePath": "/api",
    "produces": ["application/json"],
    "paths": {
        "/organizations": {
           "post": {
                "summary": "Create Organization",
                "description": "Create name and code",
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application.json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "First Time in AMS",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/orgReq"
                        }
                    }
                ],
                "tags": [
                    "Organization"
                ],
                "responses": {
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get all organization",
                "description": "get organization",
                "operationId": "get",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application.json"
                ],
                "tags": [
                    "Organization"
                ],
                "responses": {
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            } 
        },
        "/organizations/{id}": {
            "put": {
                "summary": "update organization",
                "description": "update organization",
                "operationId": "put",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application.json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "description": "to update fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/orgReq"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "organization id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Organization"
                ],
                "responses": {
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/identities": {
            "post": {
                "summary": "Create identity",
                "description": "Create identity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application.json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "identity",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/identityReq"
                        }
                    },
                    {
                        "name": "org-code",
                        "in": "header",
                        "description": "code of organization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "identities"
                ],
                "responses": {
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get identities",
                "description": "get identities",
                "operationId": "get",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application.json"
                ],
                "parameters": [
                    {
                        "name": "org-code",
                        "in": "header",
                        "description": "Org-Code",
                        "required": true
                    },
                    {
                        "name": "identityName",
                        "in": "query",
                        "description": "identityName",
                        "required": false
                    }
                ],
                "tags": [
                    "identities"
                ],
                "responses": {
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/identities/{id}": {
            "put": {
                "summary": "update identities",
                "description": "update identities",
                "operationId": "put",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application.json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "description": "to update fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/identityReq"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "identity id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "identities"
                ],
                "responses": {
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "summary": "Create users",
                "description": "Create user",
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application.json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userReq"
                        }
                    },
                    {
                        "name": "org-code",
                        "in": "header",
                        "description": "code of organization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get users",
                "description": "get users",
                "operationId": "get",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application.json"
                ],
                "parameters": [
                    {
                        "name": "org-code",
                        "in": "header",
                        "description": "Org-Code",
                        "required": true
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name",
                        "required": false
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type // Employee,Student",
                        "required": false
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/availability": {
            "post": {
                "summary": "Create users",
                "description": "Create user",
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application.json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userAvailabilityReq"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "employee id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Availability"
                ],
                "responses": {
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "orgReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            }
        },
        "identityReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "userReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "dob": {
                    "type": "date"
                },
                "type": {
                    "type": "string"
                },
                "isVisitor": {
                    "type": "boolean"
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "no": {
                                "type": "string"
                            },
                            "image": {
                                "type": "object",
                                "properties": {
                                    "url": {
                                        "type": "string"
                                    },
                                    "data": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "userAvailabilityReq": {
            "type": "object",
            "properties": {
                "monday": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "type": "date"
                        },
                        "endTime": {
                            "type": "date"
                        }
                    }
                },
                 "tuesday": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "type": "date"
                        },
                        "endTime": {
                            "type": "date"
                        }
                    }
                },
                "wednesday": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "type": "date"
                        },
                        "endTime": {
                            "type": "date"
                        }
                    }
                },
                "thursday": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "type": "date"
                        },
                        "endTime": {
                            "type": "date"
                        }
                    }
                },
                "friday": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "type": "date"
                        },
                        "endTime": {
                            "type": "date"
                        }
                    }
                },
                "saturday": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "type": "date"
                        },
                        "endTime": {
                            "type": "date"
                        }
                    }
                },
                "sunday": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "type": "date"
                        },
                        "endTime": {
                            "type": "date"
                        }
                    }
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "isSuccess": {
                    "type": "boolean"
                },
                "error || message": {
                    "type": "string"
                }
            }
        }
    }
}